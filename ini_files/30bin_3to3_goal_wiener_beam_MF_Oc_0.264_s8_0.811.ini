#general settings
[General]

#prefix for computed statistics and the directory where they will be saved
prefix=30bin_3to3_goal_wiener_beam

#statistic
stat=MF

#cosmology folder
cosmo=Oc_0.264_s8_0.811

#number of cores across which to split
n_cores=20

#Map settings
[Maps]

#number of pixels to remove from the left,right edge of the large map
trim_major=5,6

#how many maps to split into in total
n_small_maps=36

#number of pixels to remove around each small map
trim_minor=50

#data type of the map file (currently assumes *bin files)
map_dtype=float

#resolution of the maps in arcmins
resolution [arcmin]=0.1

#whether to only remove pixel on one side of the large maps
one_side_trim=False

#FWHM for Gaussian smoothing in arcmin
smooth=1.4

#how many pixels to use for apodization
apodize_pixel=5

#only supports cosine apodization from pixell right now
apodize_type=cos_pixell

#whether to subtract the mean of each of the small final maps
subtract_mean=True

#some filter that will be applied to the maps
#needs to be a dictionary with keys 'ells' and 'ell_filter'. Stored in /data.
base_filter=filter_tanh_low_80_90_high_7940_7950.npy

#additional filter that will be applied; same format for the file is needed. Stored in /data.
wiener_filter=fid_wiener_goal.npy

#which summary statistic and required specifications
[Stat]
MF_linspace=-3.0,3.0,31 #values that are used in np.linspace
sigma=1.9 #rms x 10^6

#noise settings
[Noise]
which_noise=goal #will use SO tSZ noise power spectra
seed=0 #not setting a random seed (i.e. different noise realizations for each map)
# if set to 1, then the seed is determined from the simulation file (see analyze_maps.py)

#to set flat noise, one could use the following
#which_noise=flat
#noise_level_muK_arcmin=0.1
